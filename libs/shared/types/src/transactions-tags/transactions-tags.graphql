type Query {
  TransactionsTags(
    where: TransactionsTagsWhereInput!
    limit: Int
    offset: Int
    orderBy: TransactionsTagsOrderByInput
  ): [TransactionsTags]
  countTransactionsTags(where: TransactionsTagsWhereInput!): Int
}

type Mutation {
  insertTransactionsTags(
    TransactionsTags: TransactionsTagsInsertInput!
  ): TransactionsTags
  updateTransactionsTags(
    where: TransactionsTagsWhereInput!
    TransactionsTags: TransactionsTagsUpdateInput!
  ): TransactionsTags
  deleteTransactionsTags(where: TransactionsTagsWhereInput!): Boolean
}

type TransactionsTags {
  id: ID!
  transactionId: ID!
  tagId: ID!
}

input TransactionsTagsWhereInput {
  id: ID
  transactionId: ID
  tagId: ID
}

input TransactionsTagsOrderByInput {
  id: OrderBy
  transactionId: OrderBy
  tagId: OrderBy
}

input TransactionsTagsInsertInput {
  id: ID
  transactionId: ID!
  tagId: ID!
}

input TransactionsTagsUpdateInput {
  id: ID
  transactionId: ID
  tagId: ID
}
