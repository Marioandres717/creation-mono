schema {
  query: Query
  mutation: Mutation
}

enum OrderBy {
  asc
  desc
}

enum UserRole {
  admin
}

type Query {
  me: User
  user(where: UserWhereInput!): User
  users(
    where: UserWhereInput!
    limit: Int
    offset: Int
    orderBy: UserOrderByInput
  ): [User]
  countUser(where: UserWhereInput!): Int
}

type Mutation {
  insertUser(user: UserInsertInput!): User
  updateUser(user: UserUpdateInput!, where: UserWhereInput!): User
  deleteUser(where: UserWhereInput!): Boolean
}

type User {
  id: ID!
  email: String!
  username: String
  role: UserRole
  active: Boolean
  password: String
}

input UserWhereInput {
  id: ID
  email: String
  username: String
  role: UserRole
  active: Boolean
  password: String
}

input UserOrderByInput {
  id: OrderBy
  email: OrderBy
  username: OrderBy
  role: OrderBy
  active: OrderBy
  password: OrderBy
}

input UserInsertInput {
  id: ID
  email: String!
  username: String
  role: UserRole
  active: Boolean
  password: String!
}

input UserUpdateInput {
  id: ID
  email: String
  username: String
  role: UserRole
  active: Boolean
  password: String
}
